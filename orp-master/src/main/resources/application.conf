
akka {
  loglevel = "INFO"

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    serialize-creators = on
    serialize-messages = on

    deployment {
      /popularMerger/workerRouter1 {
        router = round-robin-group
        routees.paths = ["/user/orp/coordinator"]
        cluster {
          enabled = on
          allow-local-routees = off
          use-role = worker
        }
      }
      /recentMerger/workerRouter2 {
        router = round-robin-group
        routees.paths = ["/user/orp/coordinator"]
        cluster {
          enabled = on
          allow-local-routees = off
          use-role = worker
        }
      }
      /popularityMerger/workerRouter3 {
        router = round-robin-group
        routees.paths = ["/user/orp/coordinator"]
        cluster {
          enabled = on
          allow-local-routees = off
          use-role = worker
        }
      }
      /articles/workerRouter4 {
        router = round-robin-group
        routees.paths = ["/user/articles"]
        cluster {
          enabled = on
          allow-local-routees = off
          use-role = worker
        }
      }
      /filterMerger/workerRouter5 {
        router = round-robin-group
        routees.paths = ["/user/orp/coordinator"]
        cluster {
          enabled = on
          allow-local-routees = off
          use-role = worker
        }
      }
    }
  }

  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "localhost"
      hostname = ${?HOST}
      port = 2552
    }
  }

  cluster {
    seed-nodes = ["akka.tcp://ClusterSystem@"${akka.remote.netty.tcp.hostname}":2552"]
  }
}



