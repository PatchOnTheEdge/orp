<!DOCTYPE html>
<html>
    <head>
        <link href="http://getbootstrap.com/dist/css/bootstrap.min.css" rel="stylesheet">
        <link href="http://getbootstrap.com/examples/justified-nav/justified-nav.css" rel="stylesheet">

        <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/smoothie/1.27.0/smoothie.js" charset="utf-8"></script>
        <script type="text/javascript" src="https://code.jquery.com/jquery-2.1.4.js"></script>


        <style>
        </style>
    </head>
    <body>
        <h4>Throughput: Black - Request/s. Green - Notification/s </h4>
        <canvas id="throughput" width="1024" height="600"></canvas>
        <script>
            var throughputChart = new SmoothieChart({
                millisPerPixel: 700,
                labels:{
                    fillStyle: '#000000',
                    precision: 6},
                grid: {
                    millisPerLine: 10000,
                    fillStyle: '#ffffff',
                    strokeStyle: 'rgba(0,0,0,0.19)',
                    sharpLines: true,
//                    verticalSections: 2500/100,
                    verticalSections: 10,
                    borderVisible:false
                },
//                maxValue: 2500,
//                maxValue: 20,
                minValue: 0,
                timestampFormatter: SmoothieChart.timeFormatter
            });
            throughputChart.streamTo(document.getElementById("throughput"), 1000);
            var throughputLine1 = new TimeSeries();
            var notificationLine1 = new TimeSeries();
            var requestLine1 = new TimeSeries();
            var throughputLine2 = new TimeSeries();
            setInterval(function() {
                $.get('/statistics', function(data){
                    var workers = data.workers;
                    if (workers.length >= 1) {
                        throughputLine1.append(workers[0].timestamp, workers[0].throughput);
                        notificationLine1.append(workers[0].timestamp, workers[0].notification);
                        requestLine1.append(workers[0].timestamp, workers[0].request);
                    }
                    if (workers.length >= 2) {
                        throughputLine2.append(workers[1].timestamp, workers[1].throughput);
                    }
//                    cpuLine.append(data.timestamp, data.cpu);
                });
            }, 250);
            // Add to SmoothieChart
//            throughputChart.addTimeSeries(throughputLine1, {lineWidth:1.2,strokeStyle:'#ff2600'});
            throughputChart.addTimeSeries(notificationLine1, {lineWidth:1.2,strokeStyle:'#00ff00'});
            throughputChart.addTimeSeries(requestLine1, {lineWidth:1.2,strokeStyle:'#000000'});
            throughputChart.addTimeSeries(throughputLine2, {lineWidth:1.2,strokeStyle:'#00ff00'});
        </script>

    </body>
</html>